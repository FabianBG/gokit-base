// Code generated by MockGen. DO NOT EDIT.
// Source: microservice_gokit_base/src/domain/service (interfaces: IOrderService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	model "microservice_gokit_base/src/domain/model"
	reflect "reflect"
)

// MockIOrderService is a mock of IOrderService interface
type MockIOrderService struct {
	ctrl     *gomock.Controller
	recorder *MockIOrderServiceMockRecorder
}

// MockIOrderServiceMockRecorder is the mock recorder for MockIOrderService
type MockIOrderServiceMockRecorder struct {
	mock *MockIOrderService
}

// NewMockIOrderService creates a new mock instance
func NewMockIOrderService(ctrl *gomock.Controller) *MockIOrderService {
	mock := &MockIOrderService{ctrl: ctrl}
	mock.recorder = &MockIOrderServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIOrderService) EXPECT() *MockIOrderServiceMockRecorder {
	return m.recorder
}

// ChangeStatus mocks base method
func (m *MockIOrderService) ChangeStatus(arg0 context.Context, arg1, arg2 string) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChangeStatus", arg0, arg1, arg2)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ChangeStatus indicates an expected call of ChangeStatus
func (mr *MockIOrderServiceMockRecorder) ChangeStatus(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChangeStatus", reflect.TypeOf((*MockIOrderService)(nil).ChangeStatus), arg0, arg1, arg2)
}

// Count mocks base method
func (m *MockIOrderService) Count(arg0 context.Context) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Count", arg0)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Count indicates an expected call of Count
func (mr *MockIOrderServiceMockRecorder) Count(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Count", reflect.TypeOf((*MockIOrderService)(nil).Count), arg0)
}

// Create mocks base method
func (m *MockIOrderService) Create(arg0 context.Context, arg1 model.Order) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockIOrderServiceMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIOrderService)(nil).Create), arg0, arg1)
}

// GetAll mocks base method
func (m *MockIOrderService) GetAll(arg0 context.Context) ([]*model.Order, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll", arg0)
	ret0, _ := ret[0].([]*model.Order)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll
func (mr *MockIOrderServiceMockRecorder) GetAll(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockIOrderService)(nil).GetAll), arg0)
}

// GetByID mocks base method
func (m *MockIOrderService) GetByID(arg0 context.Context, arg1 string) (model.Order, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", arg0, arg1)
	ret0, _ := ret[0].(model.Order)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID
func (mr *MockIOrderServiceMockRecorder) GetByID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockIOrderService)(nil).GetByID), arg0, arg1)
}

// GetPage mocks base method
func (m *MockIOrderService) GetPage(arg0 context.Context, arg1, arg2 int64) ([]*model.Order, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPage", arg0, arg1, arg2)
	ret0, _ := ret[0].([]*model.Order)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPage indicates an expected call of GetPage
func (mr *MockIOrderServiceMockRecorder) GetPage(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPage", reflect.TypeOf((*MockIOrderService)(nil).GetPage), arg0, arg1, arg2)
}
