// Code generated by MockGen. DO NOT EDIT.
// Source: microservice_gokit_base/src/domain/utils (interfaces: IDateGenerator)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIDateGenerator is a mock of IDateGenerator interface
type MockIDateGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockIDateGeneratorMockRecorder
}

// MockIDateGeneratorMockRecorder is the mock recorder for MockIDateGenerator
type MockIDateGeneratorMockRecorder struct {
	mock *MockIDateGenerator
}

// NewMockIDateGenerator creates a new mock instance
func NewMockIDateGenerator(ctrl *gomock.Controller) *MockIDateGenerator {
	mock := &MockIDateGenerator{ctrl: ctrl}
	mock.recorder = &MockIDateGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIDateGenerator) EXPECT() *MockIDateGeneratorMockRecorder {
	return m.recorder
}

// NowTimestamp mocks base method
func (m *MockIDateGenerator) NowTimestamp() int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NowTimestamp")
	ret0, _ := ret[0].(int64)
	return ret0
}

// NowTimestamp indicates an expected call of NowTimestamp
func (mr *MockIDateGeneratorMockRecorder) NowTimestamp() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NowTimestamp", reflect.TypeOf((*MockIDateGenerator)(nil).NowTimestamp))
}
